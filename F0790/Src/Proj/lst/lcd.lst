C51 COMPILER V9.60.0.0   LCD                                                               04/10/2021 13:15:04 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\output\lcd.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\User\Src\lcd.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Core;..\
                    -Lib\Inc;..\User\Inc;..\App\Inc) DEBUG PRINT(.\lst\lcd.lst) OBJECT(.\output\lcd.obj)

line level    source

   1          /* Includes ------------------------------------------------------------------*/
   2          #include "lcd.h"
   3          /* Private typedef -----------------------------------------------------------*/
   4          
   5          
   6          
   7          /* Private define ------------------------------------------------------------*/ 
   8          /* Private macro -------------------------------------------------------------*/
   9          /* Private variables ---------------------------------------------------------*/
  10          code uint8_t num_table[NUM_TABLE_SIZE] = //b7 - b1 : _A - _G
  11          {
  12                  0xfc,           //0  
  13                  0x60,           
  14                  0xda,
  15                  0xf2,
  16                  0x66,
  17                  0xb6,
  18                  0xbe,
  19                  0xe0,
  20                  0xfe,
  21                  0xf6,           //9     
  22                  0x02,           //-
  23                  0x6e,           //H
  24                  0x0a,           //r
  25          };
  26          
  27          
  28          uint8_t                 lcd_mode = mode_9v_power_on_wait;                                                                       //当前LCD 的显示模式
  29          SET_LOCATION    set_location = 0;                                                       //设置模式中 当前要设置的位置
  30          uint8_t                 flag_set_flash_en = 0;                          // 1：设置位允许闪烁
  31          uint8_t                 set_no_flash_gap = 0;                                   //设置位不允许闪烁的间隔时长
  32          uint8_t                 flag_clockdot_show = 1;                         // 1：时钟秒点显示                                   0：时钟秒点不显示
  33          uint8_t                 show_in_bat_5sec = 0;                                   //在电池供电时，显示时钟 5 秒
  34          
  35          
  36          
  37          /* Private functions ---------------------------------------------------------*/
  38          static void smg1_deal(uint8_t deal,uint8_t num);
  39          static void smg2_deal(uint8_t deal,uint8_t num);
  40          static void smg3_deal(uint8_t deal,uint8_t num);
  41          static void smg4_deal(uint8_t deal,uint8_t num);
  42          
  43          /* global variables ----------------------------------------------------------*/
  44          
  45          
  46          
  47          
  48          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
  49          /***@函数名称：   lcd_num_deal
  50              @函数功能：   7段数字处理，显示 或 隐藏具体的数字 
  51              @入口参数：   where；要处理的位置，取值范围 NUMBER_LOCATION    
  52                             deal；处理的方式，显示或隐藏  SHOW / HIDE  
  53                             num ：要显示的数值，取值范围  NUMBER
C51 COMPILER V9.60.0.0   LCD                                                               04/10/2021 13:15:04 PAGE 2   

  54              @出口参数：   无
  55              @备注说明：   无
  56          */
  57          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
  58          void lcd_num_deal(NUMBER_LOCATION which,uint8_t deal,uint8_t num)
  59          {
  60   1              switch(which)
  61   1              {
  62   2                      case location_num_1:    smg1_deal(deal,num_table[num]); break;
  63   2                      case location_num_2:    smg2_deal(deal,num_table[num]); break;
  64   2                      case location_num_3:    smg3_deal(deal,num_table[num]); break;
  65   2                      case location_num_4:    smg4_deal(deal,num_table[num]); break;
  66   2              default:break;
  67   2              }
  68   1      }
  69          
  70          
  71          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
  72          /***@函数名称：   lcd_symbol_deal
  73              @函数功能：   图标处理 （显示 或 隐藏）
  74              @入口参数：   which：要处理哪一个符号，取值范围 SYMBOL
  75                             deal：       SHOW(1) ，显示   HIDE(0) ，不显示
  76              @出口参数：   无
  77              @备注说明：   无
  78          */
  79          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
  80          void lcd_symbol_deal(SYMBOL which,uint8_t deal)
  81          {
  82   1              switch(which)
  83   1              {
  84   2                      case symbol_am:         SYMB_AM_S(deal);break;
  85   2                      case symbol_bat:                SYMB_BAT(deal);break;
  86   2                      case symbol_pm:                 SYMB_PM(deal);break;
  87   2                      case symbol_al1:                SYMB_AL1(deal);break;
  88   2                      case symbol_al2:                SYMB_AL2(deal);break;
  89   2                      case symbol_snooze:             SYMB_SNOOZE(deal);break;
  90   2                      case symbol_sec1:               SYMB_SEC1(deal);break;
  91   2              case symbol_sec2:       SYMB_SEC2(deal);break;
  92   2              case symbol_alarm_out:  LED_SW_CTL(deal);break;
  93   2              default:break;
  94   2              }        
  95   1      }
  96          
  97          
  98          
  99          
 100          
 101          
 102          
 103          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 104          /***@函数名称：   lcd_init
 105              @函数功能：   lcd_init
 106              @入口参数：   无
 107              @出口参数：   无
 108              @备注说明：   要点亮lcd必须使能背光
 109          */
 110          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
C51 COMPILER V9.60.0.0   LCD                                                               04/10/2021 13:15:04 PAGE 3   

 111          void lcd_init(void)
 112          {
 113   1          GPIO_Init(SMG1_A_PIN,OUTPUT);                       
 114   1              GPIO_Init(SMG1_B_PIN,OUTPUT);   
 115   1              GPIO_Init(SMG1_C_PIN,OUTPUT);   
 116   1              GPIO_Init(SMG1_D_PIN,OUTPUT);   
 117   1              GPIO_Init(SMG1_E_PIN,OUTPUT);   
 118   1              GPIO_Init(SMG1_F_PIN,OUTPUT);   
 119   1              GPIO_Init(SMG1_G_PIN,OUTPUT);   
 120   1              
 121   1              GPIO_Init(SMG2_A_PIN,OUTPUT);                   
 122   1              GPIO_Init(SMG2_B_PIN,OUTPUT);   
 123   1              GPIO_Init(SMG2_C_PIN,OUTPUT);   
 124   1              GPIO_Init(SMG2_D_PIN,OUTPUT);   
 125   1              GPIO_Init(SMG2_E_PIN,OUTPUT);   
 126   1              GPIO_Init(SMG2_F_PIN,OUTPUT);   
 127   1              GPIO_Init(SMG2_G_PIN,OUTPUT);
 128   1      
 129   1              GPIO_Init(SMG3_A_PIN,OUTPUT);                   
 130   1              GPIO_Init(SMG3_B_PIN,OUTPUT);   
 131   1              GPIO_Init(SMG3_C_PIN,OUTPUT);   
 132   1              GPIO_Init(SMG3_D_PIN,OUTPUT);   
 133   1              GPIO_Init(SMG3_E_PIN,OUTPUT);   
 134   1              GPIO_Init(SMG3_F_PIN,OUTPUT);   
 135   1              GPIO_Init(SMG3_G_PIN,OUTPUT);   
 136   1      
 137   1              GPIO_Init(SMG4_A_PIN,OUTPUT);                   
 138   1              GPIO_Init(SMG4_B_PIN,OUTPUT);   
 139   1              GPIO_Init(SMG4_C_PIN,OUTPUT);   
 140   1              GPIO_Init(SMG4_D_PIN,OUTPUT);   
 141   1              GPIO_Init(SMG4_E_PIN,OUTPUT);   
 142   1              GPIO_Init(SMG4_F_PIN,OUTPUT);   
 143   1              GPIO_Init(SMG4_G_PIN,OUTPUT);   
 144   1              
 145   1              GPIO_Init(SYMB_AM_PIN,OUTPUT);
 146   1              GPIO_Init(SYMB_BAT_PIN,OUTPUT);
 147   1              GPIO_Init(SYMB_PM_PIN,OUTPUT);
 148   1              GPIO_Init(SYMB_AL1_PIN,OUTPUT);
 149   1              GPIO_Init(SYMB_AL2_PIN,OUTPUT);
 150   1              GPIO_Init(SYMB_SNOOZE_PIN,OUTPUT);
 151   1              GPIO_Init(SYMB_SEC1_PIN,OUTPUT);
 152   1          GPIO_Init(SYMB_SEC2_PIN,OUTPUT);
 153   1      
 154   1          GPIO_Init(LED_SW_CTL_PIN,OUTPUT);    
 155   1          lcd_clear();
 156   1          
 157   1      }
 158          
 159          
 160          
 161          
 162          
 163          
 164          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 165          /***@函数名称：   lcd_clear
 166              @函数功能：   lcd_clear
 167              @入口参数：   无
 168              @出口参数：   无
 169              @备注说明：   无
 170          */
 171          /*--------------------------------------------------------------------------------------------------------
C51 COMPILER V9.60.0.0   LCD                                                               04/10/2021 13:15:04 PAGE 4   

             -----------------------------------*/
 172          void lcd_clear(void)
 173          {
 174   1              smg1_deal(HIDE,num_table[num_8]);
 175   1              smg2_deal(HIDE,num_table[num_8]);
 176   1              smg3_deal(HIDE,num_table[num_8]);
 177   1              smg4_deal(HIDE,num_table[num_8]);
 178   1      
 179   1          SYMB_AM_S(HIDE);    
 180   1          SYMB_BAT(HIDE);  
 181   1          SYMB_PM(HIDE);        
 182   1          SYMB_AL1(HIDE);       
 183   1          SYMB_AL2(HIDE);       
 184   1          SYMB_SNOOZE(HIDE);
 185   1          SYMB_SEC1(HIDE);    
 186   1          SYMB_SEC2(HIDE);    
 187   1      
 188   1          LED_SW_CTL(HIDE);
 189   1      }
 190          
 191          
 192          
 193          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 194          /***@函数名称：   lcd_show_all
 195              @函数功能：   lcd_show_all
 196              @入口参数：   无
 197              @出口参数：   无
 198              @备注说明：   无
 199          */
 200          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 201          void lcd_show_all(void)
 202          {
 203   1              smg1_deal(SHOW,num_table[num_8]);
 204   1              smg2_deal(SHOW,num_table[num_8]);
 205   1              smg3_deal(SHOW,num_table[num_8]);
 206   1              smg4_deal(SHOW,num_table[num_8]);
 207   1      
 208   1          SYMB_AM_S(SHOW);    
 209   1          SYMB_BAT(SHOW);       
 210   1          SYMB_PM(SHOW);        
 211   1          SYMB_AL1(SHOW);       
 212   1          SYMB_AL2(SHOW);       
 213   1          SYMB_SNOOZE(SHOW);
 214   1          SYMB_SEC1(SHOW);    
 215   1          SYMB_SEC2(SHOW);    
 216   1      
 217   1          LED_SW_CTL(HIDE);
 218   1      
 219   1      }
 220          
 221          
 222          
 223          
 224          
 225          
 226          
 227          
 228          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 229          /***@函数名称：   smg1_deal
C51 COMPILER V9.60.0.0   LCD                                                               04/10/2021 13:15:04 PAGE 5   

 230              @函数功能：   显示 或 隐藏 smg
 231              @入口参数：   deal：取值 SHOW(显示)  HIDE(隐藏)  num：      取值 num_table[]，显示时需要显示的数字  
 232              @出口参数：   无
 233              @备注说明：   无
 234          */
 235          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 236          static void smg1_deal(uint8_t deal,uint8_t num)
 237          {
 238   1              if(deal == SHOW)                                //如果是显示
 239   1              {               
 240   2                      SMG1_A(num & 0x80);                     //根据 num 显示 或 不显示 每个笔段
 241   2                      SMG1_B(num & 0x40);
 242   2                      SMG1_C(num & 0x20);
 243   2                      SMG1_D(num & 0x10);
 244   2                      SMG1_E(num & 0x08);
 245   2                      SMG1_F(num & 0x04);
 246   2                      SMG1_G(num & 0x02);     
 247   2              }
 248   1              else// if(deal == HIDE)         //如果是不显示
 249   1              {
 250   2                      SMG1_A(HIDE);                                                                   //直接 不显示 所有笔段
 251   2                      SMG1_B(HIDE);
 252   2                      SMG1_C(HIDE);
 253   2                      SMG1_D(HIDE);
 254   2                      SMG1_E(HIDE);
 255   2                      SMG1_F(HIDE);
 256   2                      SMG1_G(HIDE);   
 257   2              }
 258   1      }
 259          
 260          
 261          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 262          /***@函数名称：   smg2_deal
 263              @函数功能：   显示 或 隐藏 smg
 264              @入口参数：   deal：取值 SHOW(显示)  HIDE(隐藏)  num：      取值 num_table[]，显示时需要显示的数字  
 265              @出口参数：   无
 266              @备注说明：   无
 267          */
 268          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 269          static void smg2_deal(uint8_t deal,uint8_t num)
 270          {
 271   1              if(deal == SHOW)                                //如果是显示
 272   1              {
 273   2                      SMG2_A(num & 0x80);                     //根据 num 显示 或 不显示 每个笔段
 274   2                      SMG2_B(num & 0x40);
 275   2                      SMG2_C(num & 0x20);
 276   2                      SMG2_D(num & 0x10);
 277   2                      SMG2_E(num & 0x08);
 278   2                      SMG2_F(num & 0x04);
 279   2                      SMG2_G(num & 0x02);     
 280   2              }
 281   1              else                                                                            //如果是不显示
 282   1              {
 283   2                      SMG2_A(HIDE);                                                                   //直接 不显示 所有笔段
 284   2                      SMG2_B(HIDE);
 285   2                      SMG2_C(HIDE);
 286   2                      SMG2_D(HIDE);
 287   2                      SMG2_E(HIDE);
 288   2                      SMG2_F(HIDE);
C51 COMPILER V9.60.0.0   LCD                                                               04/10/2021 13:15:04 PAGE 6   

 289   2                      SMG2_G(HIDE);   
 290   2              }
 291   1      }
 292          
 293          
 294          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 295          /***@函数名称：   smg3_deal
 296              @函数功能：   显示 或 隐藏 smg
 297              @入口参数：   deal：取值 SHOW(显示)  HIDE(隐藏)  num：      取值 num_table[]，显示时需要显示的数字  
 298              @出口参数：   无
 299              @备注说明：   无
 300          */
 301          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 302          static void smg3_deal(uint8_t deal,uint8_t num)
 303          {
 304   1              if(deal == SHOW)                                //如果是显示
 305   1              {
 306   2                      SMG3_A(num & 0x80);                     //根据 num 显示 或 不显示 每个笔段
 307   2                      SMG3_B(num & 0x40);
 308   2                      SMG3_C(num & 0x20);
 309   2                      SMG3_D(num & 0x10);
 310   2                      SMG3_E(num & 0x08);
 311   2                      SMG3_F(num & 0x04);
 312   2                      SMG3_G(num & 0x02);     
 313   2              }
 314   1              else                                                                            //如果是不显示
 315   1              {
 316   2                      SMG3_A(HIDE);                                                                   //直接 不显示 所有笔段
 317   2                      SMG3_B(HIDE);
 318   2                      SMG3_C(HIDE);
 319   2                      SMG3_D(HIDE);
 320   2                      SMG3_E(HIDE);
 321   2                      SMG3_F(HIDE);
 322   2                      SMG3_G(HIDE);   
 323   2              }
 324   1      }
 325          
 326          
 327          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 328          /***@函数名称：   smg4_deal
 329              @函数功能：   显示 或 隐藏 smg
 330              @入口参数：   deal：取值 SHOW(显示)  HIDE(隐藏)  num：      取值 num_table[]，显示时需要显示的数字  
 331              @出口参数：   无
 332              @备注说明：   无
 333          */
 334          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 335          static void smg4_deal(uint8_t deal,uint8_t num)
 336          {
 337   1              if(deal == SHOW)                                //如果是显示
 338   1              {
 339   2                      SMG4_A(num & 0x80);                     //根据 num 显示 或 不显示 每个笔段
 340   2                      SMG4_B(num & 0x40);
 341   2                      SMG4_C(num & 0x20);
 342   2                      SMG4_D(num & 0x10);
 343   2                      SMG4_E(num & 0x08);
 344   2                      SMG4_F(num & 0x04);
 345   2                      SMG4_G(num & 0x02);     
 346   2              }
C51 COMPILER V9.60.0.0   LCD                                                               04/10/2021 13:15:04 PAGE 7   

 347   1              else                                                                            //如果是不显示
 348   1              {
 349   2                      SMG4_A(HIDE);                                                                   //直接 不显示 所有笔段
 350   2                      SMG4_B(HIDE);
 351   2                      SMG4_C(HIDE);
 352   2                      SMG4_D(HIDE);
 353   2                      SMG4_E(HIDE);
 354   2                      SMG4_F(HIDE);
 355   2                      SMG4_G(HIDE);   
 356   2              }
 357   1      }
 358          
 359          
 360          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 361          /***@函数名称：   show_year
 362              @函数功能：   显示年
 363              @入口参数：   无
 364              @出口参数：   无
 365              @备注说明：   无
 366          */
 367          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 368          void show_year(void)
 369          {
 370   1              lcd_num_deal(location_num_1,SHOW,calendar.st_year / 1000);
 371   1              lcd_num_deal(location_num_2,SHOW,calendar.st_year % 1000 / 100);
 372   1              lcd_num_deal(location_num_3,SHOW,calendar.st_year % 100 / 10);
 373   1              lcd_num_deal(location_num_4,SHOW,calendar.st_year % 10);
 374   1      }
 375          
 376          
 377          
 378          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 379          /***@函数名称：   show_month_day
 380              @函数功能：   显示月日
 381              @入口参数：   无
 382              @出口参数：   无
 383              @备注说明：   无
 384          */
 385          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 386          static void show_month_day(void)
 387          {
 388   1              uint8_t temp;
 389   1      
 390   1              lcd_symbol_deal(symbol_sec1,SHOW);              
 391   1              /**************************************************/
 392   1              temp = calendar.st_month / 10;
 393   1              lcd_num_deal(location_num_1,(bit)temp,temp);
 394   1              lcd_num_deal(location_num_2,SHOW,calendar.st_month % 10);       
 395   1              /**************************************************/
 396   1              temp = calendar.st_day / 10;
 397   1              lcd_num_deal(location_num_3,(bit)temp,temp);
 398   1              lcd_num_deal(location_num_4,SHOW,calendar.st_day % 10); 
 399   1      }
 400          
 401          
 402          
 403          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
C51 COMPILER V9.60.0.0   LCD                                                               04/10/2021 13:15:04 PAGE 8   

 404          /***@函数名称：   show_hour_minute
 405              @函数功能：   显示时分
 406              @入口参数：   time_from ，要显示的数据从哪里来              TIME_FROM       
 407              @出口参数：   无
 408              @备注说明：   无
 409          */
 410          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 411          void show_hour_minute(TIME_FROM time_from)
 412          {
 413   1              uint8_t hour_temp = 0;
 414   1              uint8_t minute_temp = 0;        
 415   1              uint8_t hour_temp_temp = 0;
 416   1              
 417   1              uint8_t temp = 0;
 418   1              static uint8_t pm = 0;
 419   1              static uint8_t am = 0;
 420   1              switch(time_from)               
 421   1              {
 422   2                      case from_calendar:                     hour_temp = calendar.st_hour;                   
 423   2                                                                                                                              minute_temp = calendar.st_minute;
 424   2                                                                                                                              break;
 425   2                      case from_alarm_1:                              hour_temp = rtc_alarm[ALARM_1].a_hour;
 426   2                                                                                                                              minute_temp = rtc_alarm[ALARM_1].a_minute;      
 427   2                                                                                                                              break;
 428   2                      case from_alarm_2:                              hour_temp       = rtc_alarm[ALARM_2].a_hour;    
 429   2                                                                                                                              minute_temp = rtc_alarm[ALARM_2].a_minute;
 430   2                                                                                                                              break;
 431   2              }
 432   1              /********************* 显示 时 ******************************/
 433   1              if(flag_24hours_en)                                                                                     //如果是24小时制
 434   1              {
 435   2                      hour_temp_temp = hour_temp;
 436   2              lcd_symbol_deal(symbol_am,HIDE);                                                        //关闭 am
 437   2                      lcd_symbol_deal(symbol_pm,HIDE);                                                        //关闭 pm               
 438   2              }               
 439   1              else                                                                                                                                            //如果是12小时制
 440   1              {
 441   2                      if((hour_temp >= 0) && (hour_temp < 12))                        //am                            
 442   2                      {
 443   3                              pm = 0;
 444   3                  am = 1;
 445   3                              hour_temp_temp = hour_temp;
 446   3                      }
 447   2                      else                                                                                                                                                                    //pm
 448   2                      {
 449   3                              pm = 1;
 450   3                  am = 0;
 451   3                              hour_temp_temp = hour_temp - 12;                        
 452   3                      }
 453   2              lcd_symbol_deal(symbol_am,am);                                                          //显示 am
 454   2                      lcd_symbol_deal(symbol_pm,pm);                                                          //显示 pm
 455   2                      if(hour_temp_temp == 0) hour_temp_temp = 12;    
 456   2              }
 457   1              temp = hour_temp_temp / 10;
 458   1              lcd_num_deal(location_num_1,(bit)temp,temp);
 459   1              lcd_num_deal(location_num_2,SHOW,hour_temp_temp % 10);
 460   1              /********************* 显示 分 ******************************/
 461   1              lcd_num_deal(location_num_3,SHOW,minute_temp / 10);
 462   1              lcd_num_deal(location_num_4,SHOW,minute_temp % 10);
 463   1      }
 464          
C51 COMPILER V9.60.0.0   LCD                                                               04/10/2021 13:15:04 PAGE 9   

 465          
 466          
 467          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 468          /***@函数名称：   show_12_24hours
 469              @函数功能：   显示24小时制或12小时制
 470              @入口参数：   time_from ，要显示的数据从哪里来              TIME_FROM       
 471              @出口参数：   无
 472              @备注说明：   无
 473          */
 474          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 475          
 476          void show_12_24hours(void)
 477          {
 478   1              if(flag_24hours_en)
 479   1              {
 480   2                      lcd_num_deal(location_num_1,SHOW,num_2);
 481   2                      lcd_num_deal(location_num_2,SHOW,num_4);                
 482   2              }
 483   1              else
 484   1              {
 485   2                      lcd_num_deal(location_num_1,SHOW,num_1);
 486   2                      lcd_num_deal(location_num_2,SHOW,num_2);                
 487   2              }
 488   1              lcd_num_deal(location_num_3,SHOW,num_H);
 489   1              lcd_num_deal(location_num_4,SHOW,num_r);                        
 490   1      }
 491          
 492          
 493          
 494          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 495          /***@函数名称：   show_alarm_day_style
 496              @函数功能：   显示闹铃的重复时间
 497              @入口参数：   无    
 498              @出口参数：   无
 499              @备注说明：   无
 500          */
 501          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 502          static void show_alarm_day_style(void)
 503          {
 504   1              lcd_num_deal(location_num_2,SHOW,num_); //第2个数字 显示 “-”
 505   1              /**************************************************/
 506   1              switch(rtc_alarm[flag_current_seting_alarm].a_day)
 507   1              {
 508   2                      case day_1_1:
 509   2                                                              lcd_num_deal(location_num_1,SHOW,num_1);        //第1个数字 显示 “1”
 510   2                                                              lcd_num_deal(location_num_3,SHOW,num_1);        //第3个数字 显示 “1”
 511   2                                                              break;
 512   2                      case day_1_5:
 513   2                                                              lcd_num_deal(location_num_1,SHOW,num_1);        //第1个数字 显示 “1”
 514   2                                                              lcd_num_deal(location_num_3,SHOW,num_5);        //第3个数字 显示 “5”
 515   2                                                              break;
 516   2                      case day_1_7:
 517   2                                                              lcd_num_deal(location_num_1,SHOW,num_1);        //第1个数字 显示 “1”
 518   2                                                              lcd_num_deal(location_num_3,SHOW,num_7);        //第3个数字 显示 “7”
 519   2                                                              break;
 520   2                      case day_6_7:
 521   2                                                              lcd_num_deal(location_num_1,SHOW,num_6);        //第1个数字 显示 “6”
 522   2                                                              lcd_num_deal(location_num_3,SHOW,num_7);        //第3个数字 显示 “7”
C51 COMPILER V9.60.0.0   LCD                                                               04/10/2021 13:15:04 PAGE 10  

 523   2                                                              break;
 524   2              default:break;                    
 525   2              }
 526   1      }
 527          
 528          
 529          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 530          /***@函数名称：   lcd_clock
 531              @函数功能：   走时界面
 532              @入口参数：   无    
 533              @出口参数：   无
 534              @备注说明：   无
 535          */
 536          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 537          static void lcd_clock(void)
 538          {
 539   1              show_hour_minute(from_calendar);                                                                                //显示时钟                                              
 540   1              lcd_symbol_deal(symbol_sec1,SHOW);                                                  //秒点闪烁
 541   1              lcd_symbol_deal(symbol_sec2,SHOW);                                                  //秒点闪烁
 542   1              /************************************************************/
 543   1              if(flag_alarm_timeout || flag_enter_snooze)
 544   1              {
 545   2                      if(flag_current_alarmed == ALARM_1)
 546   2                      {                       
 547   3                              lcd_symbol_deal(symbol_al1,flag_clockdot_show); //--- 对应闹钟符号闪烁 ---
 548   3                      }
 549   2                      else
 550   2                      {                       
 551   3                              lcd_symbol_deal(symbol_al2,flag_clockdot_show); 
 552   3                      }
 553   2              }
 554   1          else
 555   1          {
 556   2              lcd_symbol_deal(symbol_al1,flag_alarm1_en);                                                 //第1个闹钟符号处理
 557   2              lcd_symbol_deal(symbol_al2,flag_alarm2_en);                                                 //第2个闹钟符号处理
 558   2          }
 559   1      
 560   1          if (g_led_alarm_enable)
 561   1          {
 562   2              lcd_symbol_deal(symbol_alarm_out,(flag_clockdot_show && flag_alarm_timeout)); //flag_alarm_timeout
             - == 1闹铃灯闪烁
 563   2          }
 564   1          else
 565   1          {
 566   2              lcd_symbol_deal(symbol_alarm_out,HIDE);
 567   2          }
 568   1      }
 569          
 570          
 571          
 572          
 573          
 574          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 575          /***@函数名称：   lcd_set_clock
 576              @函数功能：   时钟设置界面
 577              @入口参数：   无    
 578              @出口参数：   无
 579              @备注说明：   无
 580          */
C51 COMPILER V9.60.0.0   LCD                                                               04/10/2021 13:15:04 PAGE 11  

 581          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 582          static void lcd_set_clock(void)
 583          {
 584   1              if(flag_set_flash_en && !flag_clockdot_show)                                            //在允许设置位闪烁 且 时钟秒点不显示 时，设置位也不显示
             -                
 585   1              {
 586   2                      switch(set_location)
 587   2                      {
 588   3                              case set_clock_hour:
 589   3                                      lcd_num_deal(location_num_1,HIDE,0);
 590   3                                      lcd_num_deal(location_num_2,HIDE,0);                                                    //隐藏 时               
 591   3                                      break;
 592   3                              case set_clock_minute: 
 593   3                                      lcd_num_deal(location_num_3,HIDE,0);    
 594   3                                      lcd_num_deal(location_num_4,HIDE,0);                                                    //隐藏 分
 595   3                                      break;                  
 596   3                              case set_clock_year: 
 597   3                              case set_clock_12_24:
 598   3                                      lcd_num_deal(location_num_1,HIDE,0);
 599   3                                      lcd_num_deal(location_num_2,HIDE,0);
 600   3                                      lcd_num_deal(location_num_3,HIDE,0);
 601   3                                      lcd_num_deal(location_num_4,HIDE,0);                                                    //隐藏 年               
 602   3                                      break;
 603   3                              case set_clock_month: 
 604   3                                      lcd_num_deal(location_num_1,HIDE,0);
 605   3                                      lcd_num_deal(location_num_2,HIDE,0);                                                    //隐藏 月       
 606   3                                      break;  
 607   3                              case set_clock_day: 
 608   3                                      lcd_num_deal(location_num_3,HIDE,0);
 609   3                                      lcd_num_deal(location_num_4,HIDE,0);                                                    //隐藏 日       
 610   3                                      break;                                                  
 611   3                      }       
 612   2              }
 613   1              else
 614   1              {
 615   2                      if(set_location < set_clock_12_24)                                                                              //如果是设置 时分
 616   2                      {
 617   3                              lcd_symbol_deal(symbol_sec1,SHOW);
 618   3                  lcd_symbol_deal(symbol_sec2,SHOW);
 619   3                  show_hour_minute(from_calendar);                                                                            //显示 时分
 620   3                      }
 621   2                      else if(set_location == set_clock_12_24)
 622   2                      {
 623   3                              show_12_24hours();
 624   3                      }
 625   2                      else if(set_location == set_clock_year)                                                         //如果是设置 年
 626   2                      {
 627   3                              show_year();
 628   3                      }       
 629   2                      else                                                                                                                                                                                                    //如果是设置 月日
 630   2                      {
 631   3                              show_month_day();
 632   3                      }       
 633   2              }
 634   1      }
 635          
 636          
 637          
 638          
 639          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
C51 COMPILER V9.60.0.0   LCD                                                               04/10/2021 13:15:04 PAGE 12  

 640          /***@函数名称：   lcd_set_alarm
 641              @函数功能：   设置闹钟界面
 642              @入口参数：   无    
 643              @出口参数：   无
 644              @备注说明：   无
 645          */
 646          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 647          static void lcd_set_alarm(void)
 648          {       
 649   1              if(flag_set_flash_en && !flag_clockdot_show)                                            //在允许设置位闪烁 且 时钟秒点不显示 时，设置位也不显示
             -        
 650   1              {
 651   2                      switch(set_location)
 652   2                      {
 653   3                              case set_alarm_hour:
 654   3                                      lcd_num_deal(location_num_1,HIDE,0);
 655   3                                      lcd_num_deal(location_num_2,HIDE,0);                                                    //隐藏 时       
 656   3                                      break;
 657   3                              case set_alarm_minute:
 658   3                                      lcd_num_deal(location_num_3,HIDE,0);    
 659   3                                      lcd_num_deal(location_num_4,HIDE,0);                                                    //隐藏 分
 660   3                                      break;
 661   3                              case set_alarm_day:
 662   3                                      lcd_num_deal(location_num_1,HIDE,0);
 663   3                                      lcd_num_deal(location_num_2,HIDE,0);                                                    //隐藏 
 664   3                                      lcd_num_deal(location_num_3,HIDE,0);    
 665   3                                      break;
 666   3      //                      case set_alarm_ringtime:
 667   3      //                              lcd_num_deal(location_num_2,HIDE,0);                                                    //隐藏 
 668   3      //                              lcd_num_deal(location_num_3,HIDE,0);    
 669   3      //                              break;
 670   3                  default:break;
 671   3                      }               
 672   2              }
 673   1              else
 674   1              {
 675   2                      if(set_location < set_alarm_day)                                                                                        //---如果是设置时分
 676   2                      {
 677   3                              lcd_symbol_deal(symbol_sec1,SHOW);
 678   3                  lcd_symbol_deal(symbol_sec2,SHOW);
 679   3      //                      if(flag_current_seting_alarm == ALARM_1)
 680   3      //                              show_hour_minute(from_alarm_1);                                                                         //显示 时分
 681   3      //                      else
 682   3      //                              show_hour_minute(from_alarm_2);                                                                         //显示 时分                     
 683   3                              show_hour_minute((uint8_t)flag_current_seting_alarm + 1);
 684   3                      }
 685   2                      else if(set_location == set_alarm_day)
 686   2                      {
 687   3                              show_alarm_day_style();
 688   3                      }
 689   2      //              else
 690   2      //              {
 691   2      //                      show_alarm_ringtime();
 692   2      //              }       
 693   2              }
 694   1              /******* 闹钟指示符号不随 设置位 闪烁 ，自己单独闪烁 *******/
 695   1              if(flag_current_seting_alarm == ALARM_1)
 696   1              {
 697   2              lcd_symbol_deal(symbol_al1,flag_clockdot_show);
 698   2          }
 699   1                      
C51 COMPILER V9.60.0.0   LCD                                                               04/10/2021 13:15:04 PAGE 13  

 700   1              else
 701   1              {
 702   2              lcd_symbol_deal(symbol_al2,flag_clockdot_show);
 703   2          }
 704   1                      
 705   1      }
 706          
 707          
 708          
 709          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 710          /***@函数名称：   lcd_set_snooze_time
 711              @函数功能：   设置贪睡时长界面
 712              @入口参数：   无    
 713              @出口参数：   无
 714              @备注说明：   无 
 715          */
 716          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 717          static void lcd_set_snooze_time(void)
 718          {
 719   1              u8 temp = 0;
 720   1      
 721   1              if(flag_set_flash_en && !flag_clockdot_show)                                            //在允许设置位闪烁 且 时钟秒点不显示 时，设置位也不显示
 722   1              {
 723   2                      lcd_num_deal(location_num_2,HIDE,0);
 724   2                      lcd_num_deal(location_num_3,HIDE,0);            
 725   2              }
 726   1              else
 727   1              {
 728   2                      temp = snooze_time / 10;
 729   2                      lcd_num_deal(location_num_2,(bit)temp,temp);
 730   2                      lcd_num_deal(location_num_3,SHOW,snooze_time % 10);             
 731   2              }
 732   1      }
 733          
 734          
 735          
 736          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 737          /***@函数名称：   lcd_test
 738              @函数功能：   lcd测试模式
 739              @入口参数：   无    
 740              @出口参数：   无
 741              @备注说明：   无
 742          */
 743          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 744          static void lcd_test(void)
 745          {
 746   1              if(test_step == 1 && test_key_num != 0)
 747   1              {
 748   2                      lcd_num_deal(location_num_2,SHOW,num_H);
 749   2                      lcd_num_deal(location_num_3,SHOW,test_key_num); 
 750   2              }
 751   1              else if(test_step == 2)
 752   1              {
 753   2                      lcd_num_deal(location_num_1,SHOW,g_current_motor_level);
 754   2                      lcd_symbol_deal(symbol_sec1,SHOW);
 755   2              lcd_symbol_deal(symbol_sec2,SHOW);
 756   2                      lcd_num_deal(location_num_4,SHOW,g_current_alarm_mode_level);
 757   2              }
C51 COMPILER V9.60.0.0   LCD                                                               04/10/2021 13:15:04 PAGE 14  

 758   1      
 759   1      
 760   1          if (test_step == 2)
 761   1          {
 762   2              if (flag_alarm_style_shake)                      //震动的操作
 763   2              {
 764   3                  motor_start(shake_strength[alarm_shake_seted_strength],0);
 765   3              }
 766   2      
 767   2              if (!flag_alarm_style_shake)
 768   2              {
 769   3                  motor_stop();
 770   3              }
 771   2      
 772   2      
 773   2              if (flag_alarm_style_ring)                                                      //****闹钟时间到时 铃声的操作
 774   2                      {
 775   3                              alarm_tone();                                                                                           //周期调用
 776   3                      }  
 777   2      
 778   2              if (!flag_alarm_style_ring)
 779   2              {
 780   3                  if (g_cmd != cmd_ring_stop)
 781   3                  {
 782   4                      ring_stop();
 783   4                  }           
 784   3              }
 785   2          }  
 786   1      }
 787          
 788          
 789          
 790          
 791          uint16_t g_9v_power_on_wait_time = 500; //500ms
 792          
 793          
 794          
 795          
 796          void lcd_clock_9v_power_on_wait(void)
 797          {
 798   1          if (!g_9v_power_on_wait_time)
 799   1          {
 800   2      #if (BL_CTRL_MOD == BL_PWM_CTRL)
 801   2              bl_brightness_set(bl_PWM_duty);    //如果是5V上电则按当前的占空比点亮背光
 802   2      #elif (BL_CTRL_MOD == BL_IO_CTRL)
                      GPIO_Init(BL_CTL_PIN,OUTPUT);
                      BL_CTL_GPIO = 1;
              #endif
 806   2              key_ad_init();
 807   2              get_calendar();                    //获取日历 
 808   2              lcd_mode = mode_clock;
 809   2          }
 810   1      }   
 811          
 812          
 813          void lcd_volume_adjust(void)
 814          {
 815   1          lcd_num_deal(location_num_3,SHOW,g_alarm_ring_index);       
 816   1      }
 817          
 818          
 819          /*********************************************************************************************************
C51 COMPILER V9.60.0.0   LCD                                                               04/10/2021 13:15:04 PAGE 15  

             -************
 820          功      能：
 821          参      数：
 822          返回值：
 823          **********************************************************************************************************
             -***********/
 824          void lcd_display(void)
 825          {
 826   1          if(flag_dc_5v)      
 827   1          {
 828   2              switch(lcd_mode)
 829   2                      {
 830   3                  case mode_9v_power_on_wait:     lcd_clock_9v_power_on_wait();break;
 831   3                              case mode_clock:                                lcd_clock();break;
 832   3                              case mode_set_alarm:                lcd_set_alarm();break;
 833   3                              case mode_set_clock:                lcd_set_clock();break;
 834   3                              case mode_set_snooze_time:          lcd_set_snooze_time();break;           
 835   3                  case mode_test:                                     lcd_test();break;
 836   3                              case mode_volum_adjust:                 lcd_volume_adjust();break;                                                                                      
 837   3                  default:break;                                                    
 838   3                      }
 839   2          }
 840   1      }
 841          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2184    ----
   CONSTANT SIZE    =     13    ----
   XDATA SIZE       =     10       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
