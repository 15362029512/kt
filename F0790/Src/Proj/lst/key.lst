C51 COMPILER V9.60.0.0   KEY                                                               04/10/2021 13:15:05 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\output\key.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\User\Src\key.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Core;..\
                    -Lib\Inc;..\User\Inc;..\App\Inc) DEBUG PRINT(.\lst\key.lst) OBJECT(.\output\key.obj)

line level    source

   1          /* Includes ------------------------------------------------------------------*/
   2          #include "key.h"
   3          #include "uart.h"
   4          
   5                  
   6          /* Private variables ---------------------------------------------------------*/
   7          //°´¼üADÖµ´ÓÐ¡µ½´ó
   8          static uint16_t key_AD_value_list[KEY_COUNT] =  {
   9              KEY_12_24H_SET_AD_VAL,KEY_SNOOZE_AD_VAL,
  10              KEY_UP_DOWM_DOUBLE_AD_VAL,KEY_UP_AD_VAL,
  11              KEY_ALARM_SET_AD_VAL,KEY_ALARM1_AD_VAL,
  12              KEY_DOWN_AD_VAL,KEY_ALARM2_AD_VAL
  13          }; //°´¼üµÄADÖµ
  14          
  15          
  16          static KEY_T s_tBtn[KEY_COUNT] = {0}; //²»Í¬°´¼üµÄ²ÎÊý
  17          
  18          static KEY_FIFO_T s_tKey;       // °´¼üFIFO±äÁ¿,½á¹¹Ìå 
  19          
  20          static uint16_t current_key_AD_value = 0; //µ±Ç°°´¼üµÄADÖµ
  21          
  22          
  23          
  24          /* global variables ----------------------------------------------------------*/
  25          uint8_t ucKeyCode = 0;      // °´¼ü·µ»ØÖµ 
  26          
  27          
  28          
  29          
  30          
  31          
  32          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
  33          /***@º¯ÊýÃû³Æ£º   key_ad_init
  34              @º¯Êý¹¦ÄÜ£º   ³õÊ¼»¯AD°´¼ü 
  35              @Èë¿Ú²ÎÊý£º   ÎÞ
  36              @³ö¿Ú²ÎÊý£º   ÎÞ
  37              @±¸×¢ËµÃ÷£º   adch5
  38          */
  39          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
  40          void key_ad_init(void)
  41          {
  42   1          GPIO_Init(KEY_AD_PIN, KEY_AD_MOD);      
  43   1              ADCON = 0x3d;
  44   1          //ADCFGL |= 0X60;           
  45   1          ADCFGL |= 0xc0;     
  46   1          bsp_InitKeyVar();
  47   1      }
  48          
  49          
  50          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
  51          /***@º¯ÊýÃû³Æ£º   close_key_ad
C51 COMPILER V9.60.0.0   KEY                                                               04/10/2021 13:15:05 PAGE 2   

  52              @º¯Êý¹¦ÄÜ£º   °´¼üADÉèÖÃÎª¸ß×èÌ¬ 
  53              @Èë¿Ú²ÎÊý£º   ÎÞ
  54              @³ö¿Ú²ÎÊý£º   ÎÞ
  55              @±¸×¢ËµÃ÷£º   adch5
  56          */
  57          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
  58          void close_key_ad(void)
  59          {
  60   1          GPIO_Init(KEY_AD_PIN, HIGH_Z);   
  61   1      }
  62          
  63          
  64          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
  65          /***@º¯ÊýÃû³Æ£º   bsp_InitKeyVar
  66              @º¯Êý¹¦ÄÜ£º   ³õÊ¼»¯°´¼ü²ÎÊý£¬³¤°´£¬¶Ì°´£¬³¤°´ÖØ¸´´¥·¢Ê±¼ä
  67              @Èë¿Ú²ÎÊý£º   ÎÞ
  68              @³ö¿Ú²ÎÊý£º   ÎÞ
  69              @±¸×¢ËµÃ÷£º   ÎÞ
  70          */
  71          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
  72          static void bsp_InitKeyVar(void)
  73          {
  74   1              uint8_t i;
  75   1      
  76   1              /* ¶Ô°´¼üFIFO¶ÁÐ´Ö¸ÕëÇåÁã */
  77   1              s_tKey.Read = 0;
  78   1              s_tKey.Write = 0;
  79   1      
  80   1              /* ¸øÃ¿¸ö°´¼ü½á¹¹Ìå³ÉÔ±±äÁ¿¸³Ò»×éÈ±Ê¡Öµ */
  81   1              for (i = 0; i < KEY_COUNT; i++)
  82   1              {
  83   2                      s_tBtn[i].LongTime = KEY_LONG_TIME;                     /* ³¤°´Ê±¼ä 0 ±íÊ¾²»¼ì²â³¤°´¼üÊÂ¼þ(Èç¹ûÐèÒªÇø·Ö³¤°´Ì§ÆðºÍ¶Ì°´Ì§ÆðÔ
             -ò±ØÐëÉèÖÃ³¤°´(³ÌÐòÉÏÉè¼ÆµÄs_tBtn[i].LongTime > 0Ê± s_tBtn[i].Count²Å»áÀÛ¼Ó)) */
  84   2              s_tBtn[i].LongCount = 0;        
  85   2              s_tBtn[i].Count = KEY_FILTER_TIME / 2;          /* ¼ÆÊýÆ÷ÉèÖÃÎªÂË²¨Ê±¼äµÄÒ»°ë */
  86   2                      s_tBtn[i].State = 0;                                                    /* °´¼üÈ±Ê¡×´Ì¬£¬0ÎªÎ´°´ÏÂ */
  87   2                      s_tBtn[i].RepeatSpeed = KEY_REPEAT_TIME;                /* °´¼üÁ¬·¢µÄËÙ¶È£¬0±íÊ¾²»Ö§³ÖÁ¬·¢ */
  88   2                      s_tBtn[i].RepeatCount = 0;                                              /* Á¬·¢¼ÆÊýÆ÷ */
  89   2              }
  90   1      }
  91          
  92          
  93          
  94          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
  95          /***@º¯ÊýÃû³Æ£º   KeyPinActive
  96              @º¯Êý¹¦ÄÜ£º   °´¼üÊÇ·ñ´¦ÓÚ°´ÏÂ×´Ì¬
  97              @Èë¿Ú²ÎÊý£º   ÎÞ
  98              @³ö¿Ú²ÎÊý£º   1ÓÐ°´¼ü 0ÎÞ°´¼ü
  99              @±¸×¢ËµÃ÷£º   ÎÞ
 100          */
 101          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 102          static uint8_t KeyPinActive(uint8_t index)
 103          {
 104   1          if (current_key_AD_value < key_AD_value_list[index])
 105   1          {
 106   2              return 1;
 107   2          }
C51 COMPILER V9.60.0.0   KEY                                                               04/10/2021 13:15:05 PAGE 3   

 108   1          else
 109   1          {
 110   2              return 0;
 111   2          }
 112   1      }
 113          
 114          
 115          
 116          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 117          /***@º¯ÊýÃû³Æ£º   IsKeyDownFunc
 118              @º¯Êý¹¦ÄÜ£º   Èç¹ûÓÐ°´¼ü°´ÏÂ£¬»ñÈ¡°´ÏÂµÄ°´¼üµÄ°´¼üÖµ
 119              @Èë¿Ú²ÎÊý£º   id£º°´¼üµÄ±àºÅË³Ðò
 120              @³ö¿Ú²ÎÊý£º   °´¼üÖµ
 121              @±¸×¢ËµÃ÷£º   ÎÞ
 122          */
 123          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 124          static uint8_t IsKeyDownFunc(uint8_t _id)
 125          {
 126   1              uint8_t i;
 127   1              uint8_t count = 0;
 128   1              uint8_t save = 255;
 129   1              if (_id < KEY_COUNT)
 130   1              {
 131   2              for (i = 0; i < KEY_COUNT; i++)
 132   2                      {
 133   3                  if (KeyPinActive(i))
 134   3                              {
 135   4                                      count++;
 136   4                                      save = i;
 137   4                              }
 138   3                              if (count == 1 && save == _id)
 139   3                              {
 140   4                                      return 1;       // Ö»ÓÐ1¸ö¼ü°´ÏÂÊ±²ÅÓÐÐ§ 
 141   4                              }
 142   3                      }
 143   2              return 0;
 144   2              }
 145   1              return 0;               
 146   1      }
 147          
 148          
 149          
 150          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 151          /***@º¯ÊýÃû³Æ£º   bsp_GetKey
 152              @º¯Êý¹¦ÄÜ£º   ´Ó°´¼üFIFO»º³åÇø¶ÁÈ¡Ò»¸ö¼üÖµ¡£
 153              @Èë¿Ú²ÎÊý£º   ÎÞ
 154              @³ö¿Ú²ÎÊý£º   °´¼ü´úÂë
 155              @±¸×¢ËµÃ÷£º   ÎÞ
 156          */
 157          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 158          uint8_t bsp_GetKey(void)
 159          {
 160   1              uint8_t ret;
 161   1      
 162   1              if (s_tKey.Read == s_tKey.Write)
 163   1              {
 164   2                      return KEY_NONE;
 165   2              }
C51 COMPILER V9.60.0.0   KEY                                                               04/10/2021 13:15:05 PAGE 4   

 166   1              else
 167   1              {
 168   2                      ret = s_tKey.Buf[s_tKey.Read];
 169   2      
 170   2                      if (++s_tKey.Read >= KEY_FIFO_SIZE)
 171   2                      {
 172   3                              s_tKey.Read = 0;
 173   3                      }
 174   2                      return ret;
 175   2              }
 176   1      }
 177          
 178          
 179          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 180          /***@º¯ÊýÃû³Æ£º   bsp_PutKey
 181              @º¯Êý¹¦ÄÜ£º   ½«1¸ö¼üÖµÑ¹Èë°´¼üFIFO»º³åÇø¡£¿ÉÓÃÓÚÄ£ÄâÒ»¸ö°´¼ü¡£
 182              @Èë¿Ú²ÎÊý£º   _KeyCode : °´¼ü´úÂë
 183              @³ö¿Ú²ÎÊý£º   ÎÞ
 184              @±¸×¢ËµÃ÷£º   ÎÞ
 185          */
 186          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 187          static void bsp_PutKey(uint8_t _KeyCode)
 188          {
 189   1              s_tKey.Buf[s_tKey.Write] = _KeyCode;
 190   1      
 191   1              if (++s_tKey.Write  >= KEY_FIFO_SIZE)
 192   1              {
 193   2                      s_tKey.Write = 0;
 194   2              }
 195   1      }
 196          
 197          
 198          
 199          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 200          /***@º¯ÊýÃû³Æ£º   bsp_DetectKey
 201              @º¯Êý¹¦ÄÜ£º   ¼ì²é°´¼üÊÇ·ñÕæµÄ°´ÏÂ£¬Ïû¶¶£¬Èç¹û°´¼üÕæµÄ°´ÏÂ£¬½«°´¼üµÄ¶¯×÷Ñ¹Èë»º³åÇø
 202              @Èë¿Ú²ÎÊý£º   i:°´¼üµÄ±àºÅË³Ðò
 203              @³ö¿Ú²ÎÊý£º   °´¼üÖµ
 204              @±¸×¢ËµÃ÷£º   ÎÞ
 205          */
 206          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 207          static void bsp_DetectKey(uint8_t i)
 208          {
 209   1          //static uint8_t _count = 0;
 210   1              KEY_T *pBtn;
 211   1              uint8_t save = 0;
 212   1              pBtn = &s_tBtn[i];
 213   1      
 214   1              if (IsKeyDownFunc(i))       //Èç¹û°´¼ü°´ÏÂÁË
 215   1              {
 216   2              
 217   2                      if (pBtn->Count < KEY_FILTER_TIME) // s_tBtn[i].Count = KEY_FILTER_TIME / 2;            // ¼ÆÊýÆ÷³õÖµÉèÖÃÎªÂË²¨Ê±¼
             -äµÄÒ»°ë 
 218   2                      {
 219   3                              pBtn->Count = KEY_FILTER_TIME;      
 220   3                      }                                       
 221   2                                                                        
 222   2                      else if(pBtn->Count < 2 * KEY_FILTER_TIME)
C51 COMPILER V9.60.0.0   KEY                                                               04/10/2021 13:15:05 PAGE 5   

 223   2                      {
 224   3                              pBtn->Count++;
 225   3                      }                                
 226   2                      else
 227   2                      {
 228   3                              if (pBtn->State == 0)
 229   3                              {
 230   4                                      pBtn->State = 1;
 231   4      
 232   4                                      // ·¢ËÍ°´Å¥°´ÏÂµÄÏûÏ¢(¶Ì°´) 
 233   4                                      bsp_PutKey((uint8_t)(5 * i + 1));
 234   4                              }
 235   3      
 236   3                              if (pBtn->LongTime > 0)                         //Èç¹ûÉèÖÃÁË³¤°´
 237   3                              {
 238   4                                      if (pBtn->LongCount < pBtn->LongTime)       //Èç¹û³¤°´¼ÆÊýÖµÐ¡ÓÚÉè¶¨µÄ³¤°´Ê±¼ä
 239   4                                      {
 240   5                                              // ·¢ËÍ°´Å¥³ÖÐø°´ÏÂµÄÏûÏ¢ 
 241   5                                              if (++pBtn->LongCount >= pBtn->LongTime) //ÔòÀÛ¼Ó³¤°´¼ÆÊýÖµ£¬Ö±µ½¼ÆÊýÖµµÈÓÚ³¤°´Ê±¼ä
 242   5                                              {
 243   6                                                      // ¼üÖµ·ÅÈë°´¼üFIFO(µÚÒ»´Î³¤°´) 
 244   6                                                      bsp_PutKey((uint8_t)(5 * i + 3));
 245   6                                              }
 246   5                                      }                                           //Èç¹û³¤°´¼ÆÊýÖµ >= ³¤°´Ê±¼ä£¬ÔòÃ¿¸ôÒ»¶ÎÊ±¼ä·¢ËÍ¶Ì°´Öµ
 247   4                                      else
 248   4                                      {
 249   5                                              if (pBtn->RepeatSpeed > 0)
 250   5                                              {
 251   6                                                      if (++pBtn->RepeatCount >= pBtn->RepeatSpeed)
 252   6                                                      {
 253   7                                                              pBtn->RepeatCount = 0;
 254   7                                                              // ³¤°´¼üºó£¬Ã¿¸ô200ms·¢ËÍ1¸ö°´¼ü(³ÖÐø³¤°´) 
 255   7                                                              bsp_PutKey((uint8_t)(5 * i + 4));
 256   7                                                      }                        
 257   6                                              }
 258   5                                      }
 259   4                              }
 260   3                      }
 261   2              }
 262   1              else                //Èç¹û°´¼üËÉÊÖÁË
 263   1              {
 264   2                      if(pBtn->Count > KEY_FILTER_TIME)   //Èç¹û³¬¹ýÁËÂË²¨Öµ£¬ÔòµÈÓÚÂË²¨Öµ
 265   2                      {                                                           
 266   3                              pBtn->Count = KEY_FILTER_TIME;                               
 267   3                      }                                   
 268   2                      else if(pBtn->Count != 0)          //Èç¹ûÃ»³¬¹ýÔò¼ÆÊýÖµ--(ËÉÊÖ¼ì²â)
 269   2                      {
 270   3                              pBtn->Count--;
 271   3                      }
 272   2                      else                                //Òþ²ØÌõ¼þÊÇ else if (pBtn->Count == 0)                             
             -     
 273   2                      {       
 274   3                              if (pBtn->State == 1)           //Èç¹ûÖ®Ç°µÄ×´Ì¬±êÖ¾Î»ÊÇ1£¬(Ö®Ç°ÊÇ°´ÏÂµÄ)
 275   3                              {
 276   4                                      pBtn->State = 0;            //×´Ì¬±êÖ¾Î»Çå0
 277   4      
 278   4                                      // ·¢ËÍ°´Å¥µ¯ÆðµÄÏûÏ¢ 
 279   4                                      if (pBtn->LongCount >= pBtn->LongTime)
 280   4                                      {
 281   5                                              pBtn->LongCount = 0;
 282   5                                              bsp_PutKey((uint8_t)(5 * i + 5));       //³¤°´Ì§Æð
 283   5                                      }
C51 COMPILER V9.60.0.0   KEY                                                               04/10/2021 13:15:05 PAGE 6   

 284   4                                      else
 285   4                                      {
 286   5                                              pBtn->LongCount = 0;
 287   5                                              bsp_PutKey((uint8_t)(5 * i + 2));       //¶Ì°´Ì§Æð
 288   5                                      }
 289   4                              }
 290   3                      }
 291   2                      pBtn->RepeatCount = 0;
 292   2              }
 293   1      }
 294          
 295          
 296          
 297          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 298          /***@º¯ÊýÃû³Æ£º   bsp_KeyScan10ms
 299              @º¯Êý¹¦ÄÜ£º   °´¼üÉ¨Ãè
 300              @Èë¿Ú²ÎÊý£º   ÎÞ
 301              @³ö¿Ú²ÎÊý£º   ÎÞ
 302              @±¸×¢ËµÃ÷£º   ¶¨Ê±Æ÷10msµ÷ÓÃÒ»´Î
 303          */
 304          /*--------------------------------------------------------------------------------------------------------
             -----------------------------------*/
 305          void bsp_KeyScan10ms(void)
 306          {
 307   1              uint8_t a;
 308   1              current_key_AD_value = GetChannelAdcValue(KEY_AD_CH);   //»ñÈ¡µ±Ç°°´¼üADÖµ
 309   1              uart_printf("current_key_AD_value = %d\n",current_key_AD_value); 
 310   1              for (a = 0; a < KEY_COUNT; a++)
 311   1              {
 312   2                      bsp_DetectKey(a);
 313   2              }
 314   1      }
 315          
 316          
 317          
 318          
 319          
 320          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    802    ----
   CONSTANT SIZE    =     27    ----
   XDATA SIZE       =    100       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
